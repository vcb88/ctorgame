
services:

  client:
    image: ${CLIENT_TAG:-ctorgame-client:latest}
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - "5173:5173"
    networks:
      - ctorgame_network
    env_file:
      - .env
    volumes:
      - ./client:/app/client
      - ./shared:/app/shared
      - /app/client/node_modules
      - /app/shared/node_modules
    command: >
      sh -c "cd /app/shared && 
             pnpm install && 
             cd /app/client && 
             pnpm install &&
             pnpm dev --host"

  server:
    image: ${SERVER_TAG:-ctorgame-server:latest}
    build:
      context: .
      dockerfile: server/Dockerfile
      target: builder  # Используем этап сборки
    ports:
      - "3000:3000"
    networks:
      - ctorgame_network
    env_file:
      - .env
    volumes:
      - game_data:/data/games
      - ./server/src:/app/server/src  # Монтируем исходники для разработки
      - ./shared/src:/app/shared/src  # Монтируем shared исходники
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    command: >
      sh -c "cd /app/shared && 
             pnpm install && 
             pnpm build && 
             cd /app/server && 
             pnpm install && 
             rm -rf dist && 
             pnpm build && 
             ls -la dist && 
             node dist/index.js"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - ctorgame_network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  mongodb:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    networks:
      - ctorgame_network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-adminpassword}
      - MONGO_APP_USER=${MONGO_APP_USER:-ctorgame}
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD:-ctorgamepass}
      - MONGO_INITDB_DATABASE=ctorgame
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    tmpfs:
      - /tmp
    ulimits:
      memlock: -1
      nproc: 64000
      nofile:
        soft: 64000
        hard: 64000
    # Настройки для улучшения производительности и безопасности
    command: >
      bash -c '
        echo never > /sys/kernel/mm/transparent_hugepage/enabled;
        echo never > /sys/kernel/mm/transparent_hugepage/defrag;
        sysctl -w vm.max_map_count=262144;
        chown -R mongodb:mongodb /data/configdb;
        mongod --auth 
               --bind_ip_all
               --wiredTigerCacheSizeGB 1
               --setParameter maxTransactionLockRequestTimeoutMillis=1500
               --setParameter diagnosticDataCollectionEnabled=false
               --setParameter enableLocalhostAuthBypass=false
      '
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_ROOT_USER:-admin}", "--password", "${MONGO_ROOT_PASSWORD:-adminpassword}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  redis_data:
  mongodb_data:
  mongodb_config:
  client_dist:
  game_data:

networks:
  ctorgame_network:
    driver: bridge